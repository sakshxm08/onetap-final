{"ast":null,"code":"var _jsxFileName = \"/Users/sakshamgambhir/Downloads/olx-main/src/Components/ViewMoreAllPosts/AllPosts.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { AllPostContext } from \"../../contextStore/AllPostContext\";\nimport Pagination from \"../Pagination/Pagination\";\nimport PostCards from \"../PostCards/PostCards\";\nimport \"./allposts.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AllPosts() {\n  _s();\n  const {\n    allPost\n  } = useContext(AllPostContext);\n  // let displayAllPosts = allPost.map((product, index) => {\n  //   return (\n  //     <div className=\"all-post-card\">\n  //       {\" \"}\n  //       <PostCards product={product} index={index} />{\" \"}\n  //     </div>\n  //   );\n  // });\n\n  let length = allPost.length; //if user refresh the whole page context will be empty so we want to redirect the user to the home page\n  const history = useHistory();\n\n  //pagination logic and implementation will start here\n  let [currentPage, setCurrentPage] = useState(1);\n  let itemsPerPage = 8;\n  let indexOfLastDish = currentPage * itemsPerPage;\n  let indexOfFirstDish = indexOfLastDish - itemsPerPage;\n  let showTheseItems = allPost.slice(indexOfFirstDish, indexOfLastDish);\n  let displayThesePosts = showTheseItems.map((product, index) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-post-card\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(PostCards, {\n        product: product,\n        index: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), \" \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: length !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-all-parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-allpost\",\n        children: displayThesePosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        setCurrentPage: setCurrentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : history.push(\"/\")\n  }, void 0, false);\n}\n_s(AllPosts, \"OEUxrvQkH6Be8zgzIVWJnh1fzBY=\", false, function () {\n  return [useHistory];\n});\n_c = AllPosts;\nexport default AllPosts;\nvar _c;\n$RefreshReg$(_c, \"AllPosts\");","map":{"version":3,"names":["React","useContext","useState","useHistory","AllPostContext","Pagination","PostCards","AllPosts","allPost","length","history","currentPage","setCurrentPage","itemsPerPage","indexOfLastDish","indexOfFirstDish","showTheseItems","slice","displayThesePosts","map","product","index","push"],"sources":["/Users/sakshamgambhir/Downloads/olx-main/src/Components/ViewMoreAllPosts/AllPosts.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { AllPostContext } from \"../../contextStore/AllPostContext\";\nimport Pagination from \"../Pagination/Pagination\";\nimport PostCards from \"../PostCards/PostCards\";\nimport \"./allposts.css\";\nfunction AllPosts() {\n  const { allPost } = useContext(AllPostContext);\n  // let displayAllPosts = allPost.map((product, index) => {\n  //   return (\n  //     <div className=\"all-post-card\">\n  //       {\" \"}\n  //       <PostCards product={product} index={index} />{\" \"}\n  //     </div>\n  //   );\n  // });\n\n  let length = allPost.length; //if user refresh the whole page context will be empty so we want to redirect the user to the home page\n  const history = useHistory();\n\n  //pagination logic and implementation will start here\n  let [currentPage, setCurrentPage] = useState(1);\n  let itemsPerPage = 8;\n  let indexOfLastDish = currentPage * itemsPerPage;\n  let indexOfFirstDish = indexOfLastDish - itemsPerPage;\n  let showTheseItems = allPost.slice(indexOfFirstDish, indexOfLastDish);\n\n  let displayThesePosts = showTheseItems.map((product, index) => {\n    return (\n      <div className=\"all-post-card\" key={index}>\n        {\" \"}\n        <PostCards product={product} index={index} />{\" \"}\n      </div>\n    );\n  });\n  return (\n    <>\n      {length !== 0 ? (\n        <div className=\"display-all-parent\">\n          <div className=\"container-allpost\">{displayThesePosts}</div>\n          <Pagination setCurrentPage={setCurrentPage} />\n        </div>\n      ) : (\n        history.push(\"/\")\n      )}\n    </>\n  );\n}\n\nexport default AllPosts;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,cAAc,QAAQ,mCAAmC;AAClE,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAO,gBAAgB;AAAC;AAAA;AACxB,SAASC,QAAQ,GAAG;EAAA;EAClB,MAAM;IAAEC;EAAQ,CAAC,GAAGP,UAAU,CAACG,cAAc,CAAC;EAC9C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAIK,MAAM,GAAGD,OAAO,CAACC,MAAM,CAAC,CAAC;EAC7B,MAAMC,OAAO,GAAGP,UAAU,EAAE;;EAE5B;EACA,IAAI,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC/C,IAAIW,YAAY,GAAG,CAAC;EACpB,IAAIC,eAAe,GAAGH,WAAW,GAAGE,YAAY;EAChD,IAAIE,gBAAgB,GAAGD,eAAe,GAAGD,YAAY;EACrD,IAAIG,cAAc,GAAGR,OAAO,CAACS,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;EAErE,IAAII,iBAAiB,GAAGF,cAAc,CAACG,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;IAC7D,oBACE;MAAK,SAAS,EAAC,eAAe;MAAA,WAC3B,GAAG,eACJ,QAAC,SAAS;QAAC,OAAO,EAAED,OAAQ;QAAC,KAAK,EAAEC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,EAAC,GAAG;IAAA,GAFfA,KAAK;MAAA;MAAA;MAAA;IAAA,QAGnC;EAEV,CAAC,CAAC;EACF,oBACE;IAAA,UACGZ,MAAM,KAAK,CAAC,gBACX;MAAK,SAAS,EAAC,oBAAoB;MAAA,wBACjC;QAAK,SAAS,EAAC,mBAAmB;QAAA,UAAES;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAO,eAC5D,QAAC,UAAU;QAAC,cAAc,EAAEN;MAAe;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1C,GAENF,OAAO,CAACY,IAAI,CAAC,GAAG;EACjB,iBACA;AAEP;AAAC,GAzCQf,QAAQ;EAAA,QAYCJ,UAAU;AAAA;AAAA,KAZnBI,QAAQ;AA2CjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}