{"ast":null,"code":"function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nvar React = require('react');\nvar PropTypes = require('prop-types');\nvar DefaultCanvasSize = 16;\nvar linkElements = [];\nvar drawAlert = function drawAlert(context, _ref) {\n  var fillColor = _ref.fillColor,\n    text = _ref.text,\n    textColor = _ref.textColor,\n    canvasSize = _ref.canvasSize;\n  var Padding = canvasSize / 5;\n  context.font = \"bold \" + (canvasSize - Padding * 2) + \"px arial\";\n  var w = Math.min(context.measureText(text).width, canvasSize - Padding) + Padding;\n  var x = canvasSize - w;\n  var y = canvasSize / 2 - Padding;\n  var h = Padding + canvasSize / 2;\n  var r = Math.min(w / 2, h / 2);\n  context.beginPath();\n  context.moveTo(x + r, y);\n  context.arcTo(x + w, y, x + w, y + h, r);\n  context.arcTo(x + w, y + h, x, y + h, r);\n  context.arcTo(x, y + h, x, y, r);\n  context.arcTo(x, y, x + w, y, r);\n  context.closePath();\n  context.fillStyle = fillColor;\n  context.fill();\n  context.fillStyle = textColor;\n  context.textBaseline = 'bottom';\n  context.textAlign = 'right';\n  context.fillText(text, canvasSize - Padding / 2, canvasSize, canvasSize - Padding);\n};\nfunction drawIcon(_ref2) {\n  var alertCount = _ref2.alertCount,\n    alertFillColor = _ref2.alertFillColor,\n    alertTextColor = _ref2.alertTextColor,\n    callback = _ref2.callback,\n    renderOverlay = _ref2.renderOverlay,\n    src = _ref2.url,\n    canvasSize = _ref2.canvasSize;\n  var img = document.createElement('img');\n  img.crossOrigin = 'Anonymous';\n  img.onload = function () {\n    var canvas = document.createElement('canvas');\n    canvas.width = canvasSize;\n    canvas.height = canvasSize;\n    var context = canvas.getContext('2d');\n    context.clearRect(0, 0, img.width, img.height);\n    context.drawImage(img, 0, 0, canvas.width, canvas.height);\n    if (alertCount) {\n      drawAlert(context, {\n        fillColor: alertFillColor,\n        textColor: alertTextColor,\n        text: alertCount,\n        canvasSize: canvasSize\n      });\n    }\n    if (renderOverlay) {\n      renderOverlay(canvas, context);\n    }\n    callback(context.canvas.toDataURL());\n  };\n  img.src = src;\n}\nvar Favicon = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Favicon, _React$Component);\n  function Favicon() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      animationIndex: 0,\n      animationLoop: null,\n      animationRunning: false\n    };\n    return _this;\n  }\n  Favicon.getActiveInstance = function getActiveInstance() {\n    return Favicon.mountedInstances[Favicon.mountedInstances.length - 1];\n  };\n  Favicon.draw = function draw() {\n    if (typeof document === 'undefined') return;\n    var activeInstance = Favicon.getActiveInstance();\n    if (linkElements.length === 0) {\n      var head = document.getElementsByTagName('head')[0];\n      var linkEl = document.createElement('link');\n      linkEl.type = 'image/x-icon';\n      linkEl.rel = 'icon';\n      var linkApple = document.createElement('link');\n      linkApple.rel = 'apple-touch-icon';\n      linkElements.push(linkEl, linkApple);\n      var links = head.getElementsByTagName('link');\n      for (var i = links.length; --i >= 0;) {\n        if (/\\bicon\\b/i.test(links[i].getAttribute('rel')) && !activeInstance.props.keepIconLink(links[i])) {\n          head.removeChild(links[i]);\n        }\n      }\n      linkElements.forEach(function (el) {\n        return head.appendChild(el);\n      });\n    }\n    var currentUrl;\n    if (activeInstance.props.url instanceof Array) {\n      currentUrl = activeInstance.props.url[activeInstance.state.animationIndex];\n    } else {\n      currentUrl = activeInstance.props.url;\n    }\n    if (activeInstance.props.alertCount || activeInstance.props.renderOverlay) {\n      drawIcon({\n        alertCount: activeInstance.props.alertCount,\n        alertFillColor: activeInstance.props.alertFillColor,\n        alertTextColor: activeInstance.props.alertTextColor,\n        callback: function callback(url) {\n          linkElements.forEach(function (el) {\n            return el.href = url;\n          });\n        },\n        renderOverlay: activeInstance.props.renderOverlay,\n        url: currentUrl,\n        canvasSize: activeInstance.props.iconSize\n      });\n    } else {\n      linkElements.forEach(function (el) {\n        return el.href = currentUrl;\n      });\n    }\n  };\n  Favicon.update = function update() {\n    if (typeof document === 'undefined') return;\n    var activeInstance = Favicon.getActiveInstance();\n    var isAnimated = activeInstance.props.url instanceof Array && activeInstance.props.animated;\n    var intervalId = null;\n    clearInterval(activeInstance.state.animationLoop);\n    if (isAnimated) {\n      var animateFavicon = function animateFavicon() {\n        var nextAnimationIndex = (activeInstance.state.animationIndex + 1) % activeInstance.props.url.length;\n        Favicon.draw();\n        activeInstance.setState({\n          animationIndex: nextAnimationIndex\n        });\n      };\n      intervalId = setInterval(animateFavicon, activeInstance.props.animationDelay);\n      animateFavicon();\n    } else {\n      Favicon.draw();\n    }\n    activeInstance.setState({\n      animationLoop: intervalId\n    });\n  };\n  var _proto = Favicon.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    Favicon.mountedInstances.push(this);\n    Favicon.update();\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var activeInstance = Favicon.getActiveInstance();\n    clearInterval(activeInstance.state.animationLoop);\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.url === this.props.url && prevProps.animated === this.props.animated && prevProps.alertCount === this.props.alertCount && prevProps.alertFillColor === this.props.alertFillColor && prevProps.alertTextColor === this.props.alertTextColor && prevProps.renderOverlay === this.props.renderOverlay && prevProps.keepIconLink === this.props.keepIconLink && prevProps.iconSize === this.props.iconSize) return;\n    Favicon.update();\n  };\n  _proto.render = function render() {\n    return null;\n  };\n  return Favicon;\n}(React.Component);\nFavicon.displayName = 'Favicon';\nFavicon.mountedInstances = [];\nFavicon.defaultProps = {\n  iconSize: DefaultCanvasSize,\n  alertCount: null,\n  alertFillColor: 'red',\n  alertTextColor: 'white',\n  animated: true,\n  animationDelay: 500,\n  keepIconLink: function keepIconLink() {\n    return false;\n  },\n  renderOverlay: null,\n  url: null\n};\nFavicon.propTypes = {\n  iconSize: PropTypes.number,\n  alertCount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  alertFillColor: PropTypes.string,\n  alertTextColor: PropTypes.string,\n  animated: PropTypes.bool,\n  animationDelay: PropTypes.number,\n  keepIconLink: PropTypes.func,\n  renderOverlay: PropTypes.func,\n  url: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]).isRequired\n};\nmodule.exports = Favicon;","map":{"version":3,"mappings":"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","names":["React","require","PropTypes","DefaultCanvasSize","linkElements","drawAlert","context","fillColor","text","textColor","canvasSize","Padding","font","w","Math","min","measureText","width","x","y","h","r","beginPath","moveTo","arcTo","closePath","fillStyle","fill","textBaseline","textAlign","fillText","drawIcon","alertCount","alertFillColor","alertTextColor","callback","renderOverlay","src","url","img","document","createElement","crossOrigin","onload","canvas","height","getContext","clearRect","drawImage","toDataURL","Favicon","state","animationIndex","animationLoop","animationRunning","getActiveInstance","mountedInstances","length","draw","activeInstance","head","getElementsByTagName","linkEl","type","rel","linkApple","push","links","i","test","getAttribute","props","keepIconLink","removeChild","forEach","el","appendChild","currentUrl","Array","href","iconSize","update","isAnimated","animated","intervalId","clearInterval","animateFavicon","nextAnimationIndex","setState","setInterval","animationDelay","componentDidMount","componentWillUnmount","componentDidUpdate","prevProps","render","Component","displayName","defaultProps","propTypes","number","oneOfType","string","bool","func","arrayOf","isRequired","module","exports"],"sources":["../src/index.js"],"sourcesContent":["'use strict'\n\nconst React = require('react')\nconst PropTypes = require('prop-types')\n\nconst DefaultCanvasSize = 16\nconst linkElements = []\n\nconst drawAlert = (context, { fillColor, text, textColor, canvasSize }) => {\n  // Allow same looking padding over differents iconSizes\n  const Padding = canvasSize / 5;\n  // Allow readable text across differnts iconSizes\n  context.font = `bold ${canvasSize - (Padding * 2)}px arial`;\n\n  const w = Math.min(\n    // Take the text with if it's smaller than available space (eg: '2')\n    context.measureText(text).width,\n    // Or take the maximum size we'll force our text to fit in anyway (eg: '1000000')\n    canvasSize - Padding) + Padding\n\n  const x = canvasSize - w\n  const y = canvasSize / 2 - Padding\n  const h = Padding + canvasSize / 2\n  const r = Math.min(w / 2, h / 2)\n\n  context.beginPath()\n  context.moveTo(x + r, y)\n  context.arcTo(x + w, y, x + w, y + h, r)\n  context.arcTo(x + w, y + h, x, y + h, r)\n  context.arcTo(x, y + h, x, y, r)\n  context.arcTo(x, y, x + w, y, r)\n  context.closePath()\n  context.fillStyle = fillColor\n  context.fill()\n  context.fillStyle = textColor\n  context.textBaseline = 'bottom'\n  context.textAlign = 'right'\n  context.fillText(\n    text,\n    canvasSize - Padding / 2,\n    canvasSize,\n    // This will prevent the text from going outside the favicon, instead it'll squeeze his with to fit in\n    canvasSize - Padding)\n}\n\nfunction drawIcon({\n  alertCount,\n  alertFillColor,\n  alertTextColor,\n  callback,\n  renderOverlay,\n  url: src,\n  canvasSize,\n}) {\n  const img = document.createElement('img')\n  img.crossOrigin = 'Anonymous'\n  img.onload = function () {\n    const canvas = document.createElement('canvas')\n    canvas.width = canvasSize;\n    canvas.height = canvasSize;\n\n    const context = canvas.getContext('2d')\n    context.clearRect(0, 0, img.width, img.height)\n    context.drawImage(img, 0, 0, canvas.width, canvas.height)\n\n    if (alertCount) {\n      drawAlert(context, {\n        fillColor: alertFillColor,\n        textColor: alertTextColor,\n        text: alertCount,\n        canvasSize,\n      })\n    }\n\n    if (renderOverlay) {\n      renderOverlay(canvas, context)\n    }\n    callback(context.canvas.toDataURL())\n  }\n  img.src = src\n}\n\nclass Favicon extends React.Component {\n  static displayName = 'Favicon'\n\n  static mountedInstances = []\n\n  static getActiveInstance() {\n    return Favicon.mountedInstances[Favicon.mountedInstances.length - 1]\n  }\n\n  static draw() {\n    if (typeof document === 'undefined') return\n\n    var activeInstance = Favicon.getActiveInstance()\n    if (linkElements.length === 0) {\n      var head = document.getElementsByTagName('head')[0]\n\n      const linkEl = document.createElement('link')\n      linkEl.type = 'image/x-icon'\n      linkEl.rel = 'icon'\n\n      const linkApple = document.createElement('link')\n      linkApple.rel = 'apple-touch-icon'\n\n      linkElements.push(linkEl, linkApple)\n\n      // remove existing favicons\n      var links = head.getElementsByTagName('link')\n      for (var i = links.length; --i >= 0; ) {\n        if (\n          /\\bicon\\b/i.test(links[i].getAttribute('rel')) &&\n          !activeInstance.props.keepIconLink(links[i])\n        ) {\n          head.removeChild(links[i])\n        }\n      }\n\n      linkElements.forEach((el) => head.appendChild(el))\n    }\n\n    var currentUrl\n\n    if (activeInstance.props.url instanceof Array) {\n      currentUrl = activeInstance.props.url[activeInstance.state.animationIndex]\n    } else {\n      currentUrl = activeInstance.props.url\n    }\n\n    if (activeInstance.props.alertCount || activeInstance.props.renderOverlay) {\n      drawIcon({\n        alertCount: activeInstance.props.alertCount,\n        alertFillColor: activeInstance.props.alertFillColor,\n        alertTextColor: activeInstance.props.alertTextColor,\n        callback: (url) => {\n          linkElements.forEach((el) => el.href = url)\n        },\n        renderOverlay: activeInstance.props.renderOverlay,\n        url: currentUrl,\n        canvasSize: activeInstance.props.iconSize\n      })\n    } else {\n      linkElements.forEach((el) => el.href = currentUrl)\n    }\n  }\n\n  static update() {\n    if (typeof document === 'undefined') return\n\n    var activeInstance = Favicon.getActiveInstance()\n    var isAnimated =\n      activeInstance.props.url instanceof Array && activeInstance.props.animated\n\n    // clear any running animations\n    var intervalId = null\n    clearInterval(activeInstance.state.animationLoop)\n\n    if (isAnimated) {\n      var animateFavicon = function animateFavicon() {\n        var nextAnimationIndex =\n          (activeInstance.state.animationIndex + 1) %\n          activeInstance.props.url.length\n        Favicon.draw()\n        activeInstance.setState({ animationIndex: nextAnimationIndex })\n      }\n      intervalId = setInterval(\n        animateFavicon,\n        activeInstance.props.animationDelay\n      )\n      animateFavicon()\n    } else {\n      Favicon.draw()\n    }\n\n    activeInstance.setState({ animationLoop: intervalId })\n  }\n\n  state = {\n    animationIndex: 0,\n    animationLoop: null,\n    animationRunning: false,\n  }\n\n  componentDidMount() {\n    Favicon.mountedInstances.push(this)\n    Favicon.update()\n  }\n\n  componentWillUnmount() {\n    var activeInstance = Favicon.getActiveInstance()\n    clearInterval(activeInstance.state.animationLoop)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.url === this.props.url &&\n      prevProps.animated === this.props.animated &&\n      prevProps.alertCount === this.props.alertCount &&\n      prevProps.alertFillColor === this.props.alertFillColor &&\n      prevProps.alertTextColor === this.props.alertTextColor &&\n      prevProps.renderOverlay === this.props.renderOverlay &&\n      prevProps.keepIconLink === this.props.keepIconLink &&\n      prevProps.iconSize === this.props.iconSize\n    )\n      return\n\n    Favicon.update()\n  }\n\n  render() {\n    return null\n  }\n}\n\nFavicon.defaultProps = {\n  iconSize: DefaultCanvasSize,\n  alertCount: null,\n  alertFillColor: 'red',\n  alertTextColor: 'white',\n  animated: true,\n  animationDelay: 500,\n  keepIconLink: () => false,\n  renderOverlay: null,\n  url: null,\n}\n\nFavicon.propTypes = {\n  iconSize: PropTypes.number,\n  alertCount: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  alertFillColor: PropTypes.string,\n  alertTextColor: PropTypes.string,\n  animated: PropTypes.bool,\n  animationDelay: PropTypes.number,\n  keepIconLink: PropTypes.func,\n  renderOverlay: PropTypes.func,\n  url: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]).isRequired,\n}\n\nmodule.exports = Favicon\n"]},"metadata":{},"sourceType":"script"}