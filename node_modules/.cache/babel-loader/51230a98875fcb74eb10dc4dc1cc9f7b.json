{"ast":null,"code":"import _slicedToArray from\"/Users/sakshamgambhir/Downloads/olx-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from\"react\";import\"./pagination.css\";import{AllPostContext}from\"../../contextStore/AllPostContext\";import{jsx as _jsx}from\"react/jsx-runtime\";function Pagination(_ref){var setCurrentPage=_ref.setCurrentPage;var _useContext=useContext(AllPostContext),allPost=_useContext.allPost;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),activeItem=_useState2[0],setActiveItem=_useState2[1];var numberOfPages=[];var itemsPerPage=8;for(var i=1;i<=Math.ceil(allPost.length/itemsPerPage);i++){numberOfPages.push(i);}var showNextPage=function showNextPage(e){var clickedPage=e.target.id;setCurrentPage(clickedPage);setActiveItem(Number(clickedPage));//Number() is used to convert string to number because here id is string and , === equals checks both side same so we want to convert it to number so we can conditionly check and active class implementation\n};var pagination=numberOfPages.map(function(pageNumber){return/*#__PURE__*/_jsx(\"li\",{id:pageNumber,className:activeItem===pageNumber?\"active\":\"\",onClick:showNextPage,children:pageNumber},pageNumber);});return/*#__PURE__*/_jsx(\"div\",{className:\"pagination\",children:pagination});}export default Pagination;","map":{"version":3,"names":["React","useContext","useState","AllPostContext","Pagination","setCurrentPage","allPost","activeItem","setActiveItem","numberOfPages","itemsPerPage","i","Math","ceil","length","push","showNextPage","e","clickedPage","target","id","Number","pagination","map","pageNumber"],"sources":["/Users/sakshamgambhir/Downloads/olx-main/src/Components/Pagination/Pagination.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport \"./pagination.css\";\nimport { AllPostContext } from \"../../contextStore/AllPostContext\";\nfunction Pagination({ setCurrentPage }) {\n  const { allPost } = useContext(AllPostContext);\n  let [activeItem, setActiveItem] = useState(\"\");\n  let numberOfPages = [];\n  let itemsPerPage = 8;\n  for (let i = 1; i <= Math.ceil(allPost.length / itemsPerPage); i++) {\n    numberOfPages.push(i);\n  }\n  const showNextPage = (e) => {\n    let clickedPage = e.target.id;\n    setCurrentPage(clickedPage);\n    setActiveItem(Number(clickedPage));//Number() is used to convert string to number because here id is string and , === equals checks both side same so we want to convert it to number so we can conditionly check and active class implementation\n  };\n  let pagination = numberOfPages.map((pageNumber) => {\n    return (\n      <li\n        key={pageNumber}\n        id={pageNumber}\n        className={activeItem === pageNumber ? \"active\" : \"\"}\n        onClick={showNextPage}\n      >\n        {pageNumber}\n      </li>\n    );\n  });\n  return <div className=\"pagination\">{pagination}</div>;\n}\n\nexport default Pagination;\n"],"mappings":"+JAAA,MAAOA,MAAK,EAAIC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CACnD,MAAO,kBAAkB,CACzB,OAASC,cAAc,KAAQ,mCAAmC,CAAC,2CACnE,QAASC,WAAU,MAAqB,IAAlBC,eAAc,MAAdA,cAAc,CAClC,gBAAoBJ,UAAU,CAACE,cAAc,CAAC,CAAtCG,OAAO,aAAPA,OAAO,CACf,cAAkCJ,QAAQ,CAAC,EAAE,CAAC,wCAAzCK,UAAU,eAAEC,aAAa,eAC9B,GAAIC,cAAa,CAAG,EAAE,CACtB,GAAIC,aAAY,CAAG,CAAC,CACpB,IAAK,GAAIC,EAAC,CAAG,CAAC,CAAEA,CAAC,EAAIC,IAAI,CAACC,IAAI,CAACP,OAAO,CAACQ,MAAM,CAAGJ,YAAY,CAAC,CAAEC,CAAC,EAAE,CAAE,CAClEF,aAAa,CAACM,IAAI,CAACJ,CAAC,CAAC,CACvB,CACA,GAAMK,aAAY,CAAG,QAAfA,aAAY,CAAIC,CAAC,CAAK,CAC1B,GAAIC,YAAW,CAAGD,CAAC,CAACE,MAAM,CAACC,EAAE,CAC7Bf,cAAc,CAACa,WAAW,CAAC,CAC3BV,aAAa,CAACa,MAAM,CAACH,WAAW,CAAC,CAAC,CAAC;AACrC,CAAC,CACD,GAAII,WAAU,CAAGb,aAAa,CAACc,GAAG,CAAC,SAACC,UAAU,CAAK,CACjD,mBACE,WAEE,EAAE,CAAEA,UAAW,CACf,SAAS,CAAEjB,UAAU,GAAKiB,UAAU,CAAG,QAAQ,CAAG,EAAG,CACrD,OAAO,CAAER,YAAa,UAErBQ,UAAU,EALNA,UAAU,CAMZ,CAET,CAAC,CAAC,CACF,mBAAO,YAAK,SAAS,CAAC,YAAY,UAAEF,UAAU,EAAO,CACvD,CAEA,cAAelB,WAAU"},"metadata":{},"sourceType":"module"}