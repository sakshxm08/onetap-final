{"ast":null,"code":"var _jsxFileName = \"/Users/sakshamgambhir/Downloads/olx-main/src/Components/Pagination/Pagination.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport \"./pagination.css\";\nimport { AllPostContext } from \"../../contextStore/AllPostContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Pagination(_ref) {\n  _s();\n  let {\n    setCurrentPage\n  } = _ref;\n  const {\n    allPost\n  } = useContext(AllPostContext);\n  let [activeItem, setActiveItem] = useState(\"\");\n  let numberOfPages = [];\n  let itemsPerPage = 8;\n  for (let i = 1; i <= Math.ceil(allPost.length / itemsPerPage); i++) {\n    numberOfPages.push(i);\n  }\n  const showNextPage = e => {\n    let clickedPage = e.target.id;\n    setCurrentPage(clickedPage);\n    setActiveItem(Number(clickedPage)); //Number() is used to convert string to number because here id is string and , === equals checks both side same so we want to convert it to number so we can conditionly check and active class implementation\n  };\n\n  let pagination = numberOfPages.map(pageNumber => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      id: pageNumber,\n      className: activeItem === pageNumber ? \"active\" : \"\",\n      onClick: showNextPage,\n      children: pageNumber\n    }, pageNumber, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination\",\n    children: pagination\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n}\n_s(Pagination, \"6IylhMNV4Bs//whk78aVEJd7qN8=\");\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","useContext","useState","AllPostContext","Pagination","setCurrentPage","allPost","activeItem","setActiveItem","numberOfPages","itemsPerPage","i","Math","ceil","length","push","showNextPage","e","clickedPage","target","id","Number","pagination","map","pageNumber"],"sources":["/Users/sakshamgambhir/Downloads/olx-main/src/Components/Pagination/Pagination.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport \"./pagination.css\";\nimport { AllPostContext } from \"../../contextStore/AllPostContext\";\nfunction Pagination({ setCurrentPage }) {\n  const { allPost } = useContext(AllPostContext);\n  let [activeItem, setActiveItem] = useState(\"\");\n  let numberOfPages = [];\n  let itemsPerPage = 8;\n  for (let i = 1; i <= Math.ceil(allPost.length / itemsPerPage); i++) {\n    numberOfPages.push(i);\n  }\n  const showNextPage = (e) => {\n    let clickedPage = e.target.id;\n    setCurrentPage(clickedPage);\n    setActiveItem(Number(clickedPage));//Number() is used to convert string to number because here id is string and , === equals checks both side same so we want to convert it to number so we can conditionly check and active class implementation\n  };\n  let pagination = numberOfPages.map((pageNumber) => {\n    return (\n      <li\n        key={pageNumber}\n        id={pageNumber}\n        className={activeItem === pageNumber ? \"active\" : \"\"}\n        onClick={showNextPage}\n      >\n        {pageNumber}\n      </li>\n    );\n  });\n  return <div className=\"pagination\">{pagination}</div>;\n}\n\nexport default Pagination;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAO,kBAAkB;AACzB,SAASC,cAAc,QAAQ,mCAAmC;AAAC;AACnE,SAASC,UAAU,OAAqB;EAAA;EAAA,IAApB;IAAEC;EAAe,CAAC;EACpC,MAAM;IAAEC;EAAQ,CAAC,GAAGL,UAAU,CAACE,cAAc,CAAC;EAC9C,IAAI,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,IAAIO,aAAa,GAAG,EAAE;EACtB,IAAIC,YAAY,GAAG,CAAC;EACpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIC,IAAI,CAACC,IAAI,CAACP,OAAO,CAACQ,MAAM,GAAGJ,YAAY,CAAC,EAAEC,CAAC,EAAE,EAAE;IAClEF,aAAa,CAACM,IAAI,CAACJ,CAAC,CAAC;EACvB;EACA,MAAMK,YAAY,GAAIC,CAAC,IAAK;IAC1B,IAAIC,WAAW,GAAGD,CAAC,CAACE,MAAM,CAACC,EAAE;IAC7Bf,cAAc,CAACa,WAAW,CAAC;IAC3BV,aAAa,CAACa,MAAM,CAACH,WAAW,CAAC,CAAC,CAAC;EACrC,CAAC;;EACD,IAAII,UAAU,GAAGb,aAAa,CAACc,GAAG,CAAEC,UAAU,IAAK;IACjD,oBACE;MAEE,EAAE,EAAEA,UAAW;MACf,SAAS,EAAEjB,UAAU,KAAKiB,UAAU,GAAG,QAAQ,GAAG,EAAG;MACrD,OAAO,EAAER,YAAa;MAAA,UAErBQ;IAAU,GALNA,UAAU;MAAA;MAAA;MAAA;IAAA,QAMZ;EAET,CAAC,CAAC;EACF,oBAAO;IAAK,SAAS,EAAC,YAAY;IAAA,UAAEF;EAAU;IAAA;IAAA;IAAA;EAAA,QAAO;AACvD;AAAC,GA1BQlB,UAAU;AAAA,KAAVA,UAAU;AA4BnB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}